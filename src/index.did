service : {
    http_request: (
        record {
            url: text;
            method: text;
            body: vec nat8;
            headers: vec record { text; text };
            certificate_version: opt nat16;
        }
    ) -> (
        record {
            body: vec nat8;
            headers: vec record { text; text };
            upgrade: opt bool;
            streaming_strategy: opt variant {
                Callback: record {
                    token: vec nat8;
                    callback: func (vec nat8) -> (
                        opt record {
                            token: opt vec nat8;
                            body: vec nat8;
                        }
                    ) query;
                }
            };
            status_code: nat16;
        }
    ) query;

    http_request_update: (
        record {
            url: text;
            method: text;
            body: vec nat8;
            headers: vec record { text; text };
        }
    ) -> (
        record {
            body: vec nat8;
            headers: vec record { text; text };
            upgrade: opt bool;
            streaming_strategy: opt variant {
                Callback: record {
                    token: vec nat8;
                    callback: func (vec nat8) -> (
                        opt record {
                            token: opt vec nat8;
                            body: vec nat8;
                        }
                    ) query;
                }
            };
            status_code: nat16;
        }
    );

    // Routes for managing plants
    post_plant: (
        record {
            name: text;
            species: text;
            waterFrequencyDays: nat;
            notes: opt text;
        }
    ) -> (
        record {
            id: text;
            name: text;
            species: text;
            lastWatered: int;
            waterFrequencyDays: nat;
            notes: opt text;
            createdAt: int;
            updatedAt: opt int;
        }
    );

    get_plants: () -> (vec record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });

    get_plants_needing_watering: () -> (vec record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });

    get_plant_by_id: (text) -> (opt record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });

    water_plant_by_id: (text) -> (opt record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });

    update_plant_by_id: (
        record {
            id: text;
            name: opt text;
            species: opt text;
            waterFrequencyDays: opt nat;
            notes: opt text;
        }
    ) -> (opt record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });

    delete_plant_by_id: (text) -> (opt record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });

    get_plants_by_species: (text) -> (vec record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });

    get_plants_by_date_range: (
        record {
            start: int;
            end: int;
        }
    ) -> (vec record {
        id: text;
        name: text;
        species: text;
        lastWatered: int;
        waterFrequencyDays: nat;
        notes: opt text;
        createdAt: int;
        updatedAt: opt int;
    });
}
